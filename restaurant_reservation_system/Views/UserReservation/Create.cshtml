@model UserReservationViewModel


<div class="row justify-content-center">
    <div class="col-12 col-md-6">
        <div class="card border-info rounded-3 shadow mx-auto">
                <div class="card-body">
                    <h5 class="card-title text-center">Get A Very Quick Reservation Without Logging In!</h5>
                    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>

                    <form method="post" asp-action="BookReservation">
                        <div asp-validation-summary="All" class="text-danger"></div>
                        <div class="mb-3">
                            <label asp-for="CustomerName" class="form-label"></label>
                            <input asp-for="CustomerName" class="form-control" disabled />
                        </div>
                        <div class="mb-3">
                            <label asp-for="CustomerEmail" class="form-label"></label>
                            <input asp-for="CustomerEmail" class="form-control" disabled />
                        </div>
                        <div class="mb-3">
                            <label asp-for="CustomerPhone" class="form-label"></label>
                            <input asp-for="CustomerPhone" class="form-control" disabled/>
                        </div>
                        <div class="mb-3">
                            <label asp-for="NumberOfGuests" class="form-label"></label>
                            <input asp-for="NumberOfGuests" class="form-control" />
                            <span asp-validation-for="NumberOfGuests" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="ReservationDate" class="form-label"></label>
                            <input asp-for="ReservationDate" class="form-control" type="date"
                                   min="@DateTime.Now.ToString("yyyy-MM-dd")"
                                   onchange="loadAvailableHours(this.value)" />
                            <span asp-validation-for="ReservationDate" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="ReservationHour" class="form-label"></label>
                            <select asp-for="ReservationHour" class="form-select" id="hourSelect" disabled>
                                <option value="">Önce tarih seçiniz</option>
                            </select>
                            <span asp-validation-for="ReservationHour" class="text-danger"></span>
                        </div>
                        <button type="submit" class="btn btn-primary">Book Reservation</button>
                    </form>
                    <br />
                    <a href="#" class="card-link">Card link</a>
                    <a href="#" class="card-link">Another link</a>
                </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>

        async function loadAvailableHours(date) {
            const hourSelect = document.getElementById('hourSelect');

            if (!date) {
                hourSelect.disabled = true;
                hourSelect.innerHTML = '<option value="">First you must select a date</option>';
                return;
            }

            hourSelect.disabled = true;
            hourSelect.innerHTML = '<option value="">Loading...</option>';

            try {
                const response = await fetch(`https://localhost:7284/api/GuestReservation/available-hours?date=${date}`);
                if (!response.ok) throw new Error('Hours couldn\'t be loaded');

                const hours = await response.json();

                hourSelect.innerHTML = '<option value="">Select an hour</option>';

                if (hours && hours.length > 0) {
                    hours.forEach(hour => {
                        const option = document.createElement('option');
                        option.value = hour;
                        option.textContent = hour;
                        hourSelect.appendChild(option);
                    });
                    hourSelect.disabled = false;
                } else {
                    hourSelect.innerHTML = '<option value="">There is no available hours for this date</option>';
                }
            } catch (error) {
                console.error('Error:', error);
                hourSelect.innerHTML = '<option value="">An error occured, please try again.</option>';
            }
        }

        document.addEventListener('DOMContentLoaded', function() {
            const dateInput = document.querySelector('input[type="date"]');
            if (!dateInput.value) {
                document.getElementById('hourSelect').disabled = true;
            }
        });
    </script>
}
